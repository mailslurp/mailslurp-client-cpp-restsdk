/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ExportControllerApi.h
 *
 * 
 */

#ifndef COM_MAILSLURP_CLIENT_API_ExportControllerApi_H_
#define COM_MAILSLURP_CLIENT_API_ExportControllerApi_H_


#include "../ApiClient.h"

#include "ExportLink.h"
#include "ExportOptions.h"
#include <cpprest/details/basic_types.h>


#include <boost/optional.hpp>

namespace com {
namespace mailslurp {
namespace client {
namespace api {

using namespace com::mailslurp::client::model;



class  ExportControllerApi 
{
public:

    explicit ExportControllerApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~ExportControllerApi();

    /// <summary>
    /// Export inboxes link callable via browser
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="exportType"></param>
    /// <param name="apiKey"></param>
    /// <param name="outputFormat"></param>
    /// <param name="filter"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="listSeparatorToken"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    /// <param name="excludePreviouslyExported"> (optional, default to false)</param>
    /// <param name="createdEarliestTime"> (optional, default to utility::datetime())</param>
    /// <param name="createdOldestTime"> (optional, default to utility::datetime())</param>
    pplx::task<std::vector<utility::string_t>> exportEntities(
        utility::string_t exportType,
        utility::string_t apiKey,
        utility::string_t outputFormat,
        boost::optional<utility::string_t> filter,
        boost::optional<utility::string_t> listSeparatorToken,
        boost::optional<bool> excludePreviouslyExported,
        boost::optional<utility::datetime> createdEarliestTime,
        boost::optional<utility::datetime> createdOldestTime
    ) const;
    /// <summary>
    /// Get export link
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="exportType"></param>
    /// <param name="exportOptions"></param>
    /// <param name="apiKey"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ExportLink>> getExportLink(
        utility::string_t exportType,
        std::shared_ptr<ExportOptions> exportOptions,
        boost::optional<utility::string_t> apiKey
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_API_ExportControllerApi_H_ */

