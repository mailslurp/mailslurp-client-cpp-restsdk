/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * EmailFeatureFamilyStatistics.h
 *
 * 
 */

#ifndef COM_MAILSLURP_CLIENT_MODEL_EmailFeatureFamilyStatistics_H_
#define COM_MAILSLURP_CLIENT_MODEL_EmailFeatureFamilyStatistics_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>
#include "CppRestOpenAPIClient/model/EmailFeaturePlatformStatistics.h"

namespace com {
namespace mailslurp {
namespace client {
namespace model {

class EmailFeaturePlatformStatistics;

/// <summary>
/// 
/// </summary>
class  EmailFeatureFamilyStatistics
    : public ModelBase
{
public:
    EmailFeatureFamilyStatistics();
    virtual ~EmailFeatureFamilyStatistics();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// EmailFeatureFamilyStatistics members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFeature() const;
    bool featureIsSet() const;
    void unsetFeature();

    void setFeature(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFamily() const;
    bool familyIsSet() const;
    void unsetFamily();

    void setFamily(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<EmailFeaturePlatformStatistics>>& getPlatforms();
    bool platformsIsSet() const;
    void unsetPlatforms();

    void setPlatforms(const std::vector<std::shared_ptr<EmailFeaturePlatformStatistics>>& value);


protected:
    utility::string_t m_Feature;
    bool m_FeatureIsSet;
    utility::string_t m_Family;
    bool m_FamilyIsSet;
    std::vector<std::shared_ptr<EmailFeaturePlatformStatistics>> m_Platforms;
    bool m_PlatformsIsSet;
};


}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_MODEL_EmailFeatureFamilyStatistics_H_ */
