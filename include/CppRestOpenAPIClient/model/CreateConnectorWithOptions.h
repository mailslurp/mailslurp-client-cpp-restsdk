/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateConnectorWithOptions.h
 *
 * Options for creating an inbox connection with an external mail provider including extra settings
 */

#ifndef COM_MAILSLURP_CLIENT_MODEL_CreateConnectorWithOptions_H_
#define COM_MAILSLURP_CLIENT_MODEL_CreateConnectorWithOptions_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/CreateConnectorImapConnectionOptions.h"
#include "CppRestOpenAPIClient/model/CreateConnectorSyncSettingsOptions.h"
#include "CppRestOpenAPIClient/model/CreateConnectorSmtpConnectionOptions.h"
#include "CppRestOpenAPIClient/model/CreateConnectorOptions.h"

namespace com {
namespace mailslurp {
namespace client {
namespace model {

class CreateConnectorOptions;
class CreateConnectorImapConnectionOptions;
class CreateConnectorSmtpConnectionOptions;
class CreateConnectorSyncSettingsOptions;

/// <summary>
/// Options for creating an inbox connection with an external mail provider including extra settings
/// </summary>
class  CreateConnectorWithOptions
    : public ModelBase
{
public:
    CreateConnectorWithOptions();
    virtual ~CreateConnectorWithOptions();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreateConnectorWithOptions members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CreateConnectorOptions> getCreateConnectorOptions() const;
    bool createConnectorOptionsIsSet() const;
    void unsetCreateConnectorOptions();

    void setCreateConnectorOptions(const std::shared_ptr<CreateConnectorOptions>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CreateConnectorImapConnectionOptions> getCreateConnectorImapConnectionOptions() const;
    bool createConnectorImapConnectionOptionsIsSet() const;
    void unsetCreateConnectorImapConnectionOptions();

    void setCreateConnectorImapConnectionOptions(const std::shared_ptr<CreateConnectorImapConnectionOptions>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CreateConnectorSmtpConnectionOptions> getCreateConnectorSmtpConnectionOptions() const;
    bool createConnectorSmtpConnectionOptionsIsSet() const;
    void unsetCreateConnectorSmtpConnectionOptions();

    void setCreateConnectorSmtpConnectionOptions(const std::shared_ptr<CreateConnectorSmtpConnectionOptions>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CreateConnectorSyncSettingsOptions> getCreateConnectorSyncSettingsOptions() const;
    bool createConnectorSyncSettingsOptionsIsSet() const;
    void unsetCreateConnectorSyncSettingsOptions();

    void setCreateConnectorSyncSettingsOptions(const std::shared_ptr<CreateConnectorSyncSettingsOptions>& value);


protected:
    std::shared_ptr<CreateConnectorOptions> m_CreateConnectorOptions;
    bool m_CreateConnectorOptionsIsSet;
    std::shared_ptr<CreateConnectorImapConnectionOptions> m_CreateConnectorImapConnectionOptions;
    bool m_CreateConnectorImapConnectionOptionsIsSet;
    std::shared_ptr<CreateConnectorSmtpConnectionOptions> m_CreateConnectorSmtpConnectionOptions;
    bool m_CreateConnectorSmtpConnectionOptionsIsSet;
    std::shared_ptr<CreateConnectorSyncSettingsOptions> m_CreateConnectorSyncSettingsOptions;
    bool m_CreateConnectorSyncSettingsOptionsIsSet;
};


}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_MODEL_CreateConnectorWithOptions_H_ */
