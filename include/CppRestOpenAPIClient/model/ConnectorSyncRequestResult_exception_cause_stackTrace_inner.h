/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ConnectorSyncRequestResult_exception_cause_stackTrace_inner.h
 *
 * 
 */

#ifndef COM_MAILSLURP_CLIENT_MODEL_ConnectorSyncRequestResult_exception_cause_stackTrace_inner_H_
#define COM_MAILSLURP_CLIENT_MODEL_ConnectorSyncRequestResult_exception_cause_stackTrace_inner_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace mailslurp {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  ConnectorSyncRequestResult_exception_cause_stackTrace_inner
    : public ModelBase
{
public:
    ConnectorSyncRequestResult_exception_cause_stackTrace_inner();
    virtual ~ConnectorSyncRequestResult_exception_cause_stackTrace_inner();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ConnectorSyncRequestResult_exception_cause_stackTrace_inner members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getClassLoaderName() const;
    bool classLoaderNameIsSet() const;
    void unsetClassLoaderName();

    void setClassLoaderName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getModuleName() const;
    bool moduleNameIsSet() const;
    void unsetModuleName();

    void setModuleName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getModuleVersion() const;
    bool moduleVersionIsSet() const;
    void unsetModuleVersion();

    void setModuleVersion(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMethodName() const;
    bool methodNameIsSet() const;
    void unsetMethodName();

    void setMethodName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFileName() const;
    bool fileNameIsSet() const;
    void unsetFileName();

    void setFileName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getLineNumber() const;
    bool lineNumberIsSet() const;
    void unsetLineNumber();

    void setLineNumber(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getClassName() const;
    bool classNameIsSet() const;
    void unsetClassName();

    void setClassName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isNativeMethod() const;
    bool nativeMethodIsSet() const;
    void unsetNativeMethod();

    void setNativeMethod(bool value);


protected:
    utility::string_t m_ClassLoaderName;
    bool m_ClassLoaderNameIsSet;
    utility::string_t m_ModuleName;
    bool m_ModuleNameIsSet;
    utility::string_t m_ModuleVersion;
    bool m_ModuleVersionIsSet;
    utility::string_t m_MethodName;
    bool m_MethodNameIsSet;
    utility::string_t m_FileName;
    bool m_FileNameIsSet;
    int32_t m_LineNumber;
    bool m_LineNumberIsSet;
    utility::string_t m_ClassName;
    bool m_ClassNameIsSet;
    bool m_NativeMethod;
    bool m_NativeMethodIsSet;
};


}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_MODEL_ConnectorSyncRequestResult_exception_cause_stackTrace_inner_H_ */
