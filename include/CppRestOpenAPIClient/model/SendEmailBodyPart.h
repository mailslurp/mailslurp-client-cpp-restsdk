/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SendEmailBodyPart.h
 *
 * Email body content parts for multipart mime message. Will override body.
 */

#ifndef COM_MAILSLURP_CLIENT_MODEL_SendEmailBodyPart_H_
#define COM_MAILSLURP_CLIENT_MODEL_SendEmailBodyPart_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace mailslurp {
namespace client {
namespace model {


/// <summary>
/// Email body content parts for multipart mime message. Will override body.
/// </summary>
class  SendEmailBodyPart
    : public ModelBase
{
public:
    SendEmailBodyPart();
    virtual ~SendEmailBodyPart();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SendEmailBodyPart members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getContentType() const;
    bool contentTypeIsSet() const;
    void unsetContentType();

    void setContentType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getContentBody() const;
    bool contentBodyIsSet() const;
    void unsetContentBody();

    void setContentBody(const utility::string_t& value);


protected:
    utility::string_t m_ContentType;
    bool m_ContentTypeIsSet;
    utility::string_t m_ContentBody;
    bool m_ContentBodyIsSet;
};


}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_MODEL_SendEmailBodyPart_H_ */
