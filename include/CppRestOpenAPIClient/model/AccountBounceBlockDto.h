/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AccountBounceBlockDto.h
 *
 * 
 */

#ifndef COM_MAILSLURP_CLIENT_MODEL_AccountBounceBlockDto_H_
#define COM_MAILSLURP_CLIENT_MODEL_AccountBounceBlockDto_H_


#include "CppRestOpenAPIClient/ModelBase.h"


namespace com {
namespace mailslurp {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  AccountBounceBlockDto
    : public ModelBase
{
public:
    AccountBounceBlockDto();
    virtual ~AccountBounceBlockDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AccountBounceBlockDto members

    /// <summary>
    /// 
    /// </summary>
    bool isIsSendingBlocked() const;
    bool isSendingBlockedIsSet() const;
    void unsetIsSendingBlocked();

    void setIsSendingBlocked(bool value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getBounceCount() const;
    bool bounceCountIsSet() const;
    void unsetBounceCount();

    void setBounceCount(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getBounceCountToday() const;
    bool bounceCountTodayIsSet() const;
    void unsetBounceCountToday();

    void setBounceCountToday(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getMaximumDailyBounces() const;
    bool maximumDailyBouncesIsSet() const;
    void unsetMaximumDailyBounces();

    void setMaximumDailyBounces(int64_t value);

    /// <summary>
    /// 
    /// </summary>
    int64_t getMaximumAccountBounces() const;
    bool maximumAccountBouncesIsSet() const;
    void unsetMaximumAccountBounces();

    void setMaximumAccountBounces(int64_t value);


protected:
    bool m_IsSendingBlocked;
    bool m_IsSendingBlockedIsSet;
    int64_t m_BounceCount;
    bool m_BounceCountIsSet;
    int64_t m_BounceCountToday;
    bool m_BounceCountTodayIsSet;
    int64_t m_MaximumDailyBounces;
    bool m_MaximumDailyBouncesIsSet;
    int64_t m_MaximumAccountBounces;
    bool m_MaximumAccountBouncesIsSet;
};


}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_MODEL_AccountBounceBlockDto_H_ */
