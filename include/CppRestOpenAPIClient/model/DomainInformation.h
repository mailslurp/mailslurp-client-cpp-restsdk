/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * DomainInformation.h
 *
 * 
 */

#ifndef COM_MAILSLURP_CLIENT_MODEL_DomainInformation_H_
#define COM_MAILSLURP_CLIENT_MODEL_DomainInformation_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace mailslurp {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  DomainInformation
    : public ModelBase
{
public:
    DomainInformation();
    virtual ~DomainInformation();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// DomainInformation members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDomainName() const;
    bool domainNameIsSet() const;
    void unsetDomainName();

    void setDomainName(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isVerified() const;
    bool verifiedIsSet() const;
    void unsetVerified();

    void setVerified(bool value);

    /// <summary>
    /// Type of domain. Dictates type of inbox that can be created with domain. HTTP means inboxes are processed using SES while SMTP inboxes use a custom SMTP mail server. SMTP does not support sending so use HTTP for sending emails.
    /// </summary>
    utility::string_t getDomainType() const;
    bool domainTypeIsSet() const;
    void unsetDomainType();

    void setDomainType(const utility::string_t& value);


protected:
    utility::string_t m_DomainName;
    bool m_DomainNameIsSet;
    bool m_Verified;
    bool m_VerifiedIsSet;
    utility::string_t m_DomainType;
    bool m_DomainTypeIsSet;
};


}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_MODEL_DomainInformation_H_ */
