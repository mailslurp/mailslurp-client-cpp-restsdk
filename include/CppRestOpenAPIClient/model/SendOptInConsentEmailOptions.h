/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SendOptInConsentEmailOptions.h
 *
 * 
 */

#ifndef COM_MAILSLURP_CLIENT_MODEL_SendOptInConsentEmailOptions_H_
#define COM_MAILSLURP_CLIENT_MODEL_SendOptInConsentEmailOptions_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace mailslurp {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  SendOptInConsentEmailOptions
    : public ModelBase
{
public:
    SendOptInConsentEmailOptions();
    virtual ~SendOptInConsentEmailOptions();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SendOptInConsentEmailOptions members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getTemplateHtml() const;
    bool templateHtmlIsSet() const;
    void unsetTemplateHtml();

    void setTemplateHtml(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSubject() const;
    bool subjectIsSet() const;
    void unsetSubject();

    void setSubject(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSenderInbox() const;
    bool senderInboxIsSet() const;
    void unsetSenderInbox();

    void setSenderInbox(const utility::string_t& value);


protected:
    utility::string_t m_TemplateHtml;
    bool m_TemplateHtmlIsSet;
    utility::string_t m_Subject;
    bool m_SubjectIsSet;
    utility::string_t m_SenderInbox;
    bool m_SenderInboxIsSet;
};


}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_MODEL_SendOptInConsentEmailOptions_H_ */
