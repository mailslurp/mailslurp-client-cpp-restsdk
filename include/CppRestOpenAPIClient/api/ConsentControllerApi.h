/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ConsentControllerApi.h
 *
 * 
 */

#ifndef COM_MAILSLURP_CLIENT_API_ConsentControllerApi_H_
#define COM_MAILSLURP_CLIENT_API_ConsentControllerApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/OptInConsentOptions.h"
#include "CppRestOpenAPIClient/model/OptInConsentSendResult.h"
#include "CppRestOpenAPIClient/model/OptInSendingConsentDto.h"
#include "CppRestOpenAPIClient/model/PageOptInIdentityProjection.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace com {
namespace mailslurp {
namespace client {
namespace api {

using namespace com::mailslurp::client::model;



class  ConsentControllerApi 
{
public:

    explicit ConsentControllerApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~ConsentControllerApi();

    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="emailAddress">Email address to check consent for</param>
    pplx::task<std::shared_ptr<OptInSendingConsentDto>> checkSendingConsentForEmailAddress(
        utility::string_t emailAddress
    ) const;
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="page">Optional page index in list pagination (optional, default to 0)</param>
    /// <param name="size">Optional page size in list pagination (optional, default to 0)</param>
    /// <param name="sort">Optional createdAt sort direction ASC or DESC (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<PageOptInIdentityProjection>> getOptInIdentities(
        boost::optional<int32_t> page,
        boost::optional<int32_t> size,
        boost::optional<utility::string_t> sort
    ) const;
    /// <summary>
    /// 
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    /// <param name="emailAddress">Email address to revoke consent for</param>
    pplx::task<std::shared_ptr<OptInSendingConsentDto>> revokeOptInConsentForEmailAddress(
        utility::string_t emailAddress
    ) const;
    /// <summary>
    /// Send a verification code to a user once they have explicitly submitted their email address
    /// </summary>
    /// <remarks>
    /// Send double-opt in consent for an email address
    /// </remarks>
    /// <param name="optInConsentOptions"></param>
    pplx::task<std::shared_ptr<OptInConsentSendResult>> sendOptInConsentForEmailAddress(
        std::shared_ptr<OptInConsentOptions> optInConsentOptions
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_API_ConsentControllerApi_H_ */

