/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 6.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAuthConnectionApi.h
 *
 * 
 */

#ifndef COM_MAILSLURP_CLIENT_API_OAuthConnectionApi_H_
#define COM_MAILSLURP_CLIENT_API_OAuthConnectionApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/CreateOAuthConnectionResult.h"
#include "CppRestOpenAPIClient/model/CreateOAuthExchangeResult.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace com {
namespace mailslurp {
namespace client {
namespace api {

using namespace com::mailslurp::client::model;



class  OAuthConnectionApi 
{
public:

    explicit OAuthConnectionApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~OAuthConnectionApi();

    /// <summary>
    /// Create an OAuth connection
    /// </summary>
    /// <remarks>
    /// Configure an inbox for OAuth sync with MailSlurp
    /// </remarks>
    /// <param name="redirectBase"></param>
    /// <param name="oAuthConnectionType"></param>
    /// <param name="emailAddress"> (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<CreateOAuthConnectionResult>> createOAuthConnection(
        utility::string_t redirectBase,
        utility::string_t oAuthConnectionType,
        boost::optional<utility::string_t> emailAddress
    ) const;
    /// <summary>
    /// Exchange authorization code for access token and create inbox
    /// </summary>
    /// <remarks>
    /// Exchange an OAuth code for an access token and create an inbox connection in MailSlurp
    /// </remarks>
    /// <param name="authorizationCode"></param>
    /// <param name="redirectUri"></param>
    pplx::task<std::shared_ptr<CreateOAuthExchangeResult>> exchangeAuthorizationTokenAndCreateOrUpdateInbox(
        utility::string_t authorizationCode,
        utility::string_t redirectUri
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_API_OAuthConnectionApi_H_ */

