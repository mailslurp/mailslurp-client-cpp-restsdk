/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * WebhookRedriveResult.h
 *
 * 
 */

#ifndef COM_MAILSLURP_CLIENT_MODEL_WebhookRedriveResult_H_
#define COM_MAILSLURP_CLIENT_MODEL_WebhookRedriveResult_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace mailslurp {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  WebhookRedriveResult
    : public ModelBase
{
public:
    WebhookRedriveResult();
    virtual ~WebhookRedriveResult();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// WebhookRedriveResult members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMessage() const;
    bool messageIsSet() const;
    void unsetMessage();

    void setMessage(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isSuccess() const;
    bool successIsSet() const;
    void unsetSuccess();

    void setSuccess(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getWebhookResultId() const;
    bool webhookResultIdIsSet() const;
    void unsetWebhookResultId();

    void setWebhookResultId(const utility::string_t& value);


protected:
    utility::string_t m_Message;
    bool m_MessageIsSet;
    bool m_Success;
    bool m_SuccessIsSet;
    utility::string_t m_WebhookResultId;
    bool m_WebhookResultIdIsSet;
};


}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_MODEL_WebhookRedriveResult_H_ */
