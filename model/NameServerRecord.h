/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.   ## Resources - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * NameServerRecord.h
 *
 * Name Server Record
 */

#ifndef COM_MAILSLURP_CLIENT_MODEL_NameServerRecord_H_
#define COM_MAILSLURP_CLIENT_MODEL_NameServerRecord_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace mailslurp {
namespace client {
namespace model {


/// <summary>
/// Name Server Record
/// </summary>
class  NameServerRecord
    : public ModelBase
{
public:
    NameServerRecord();
    virtual ~NameServerRecord();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// NameServerRecord members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getPriority() const;
    bool priorityIsSet() const;
    void unsetPriority();

    void setPriority(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRaw() const;
    bool rawIsSet() const;
    void unsetRaw();

    void setRaw(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRecordType() const;
    bool recordTypeIsSet() const;
    void unsetRecordType();

    void setRecordType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getValue() const;
    bool valueIsSet() const;
    void unsetValue();

    void setValue(const utility::string_t& value);


protected:
    utility::string_t m_Priority;
    bool m_PriorityIsSet;
    utility::string_t m_Raw;
    bool m_RawIsSet;
    utility::string_t m_RecordType;
    bool m_RecordTypeIsSet;
    utility::string_t m_Value;
    bool m_ValueIsSet;
};


}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_MODEL_NameServerRecord_H_ */
