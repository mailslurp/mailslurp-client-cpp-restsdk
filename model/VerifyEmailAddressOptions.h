/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
 *
 * The version of the OpenAPI document: 6.5.2
 * Contact: contact@mailslurp.dev
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.3.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * VerifyEmailAddressOptions.h
 *
 * Options for verifying that an email address exists at a remote mail server.
 */

#ifndef COM_MAILSLURP_CLIENT_MODEL_VerifyEmailAddressOptions_H_
#define COM_MAILSLURP_CLIENT_MODEL_VerifyEmailAddressOptions_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace mailslurp {
namespace client {
namespace model {


/// <summary>
/// Options for verifying that an email address exists at a remote mail server.
/// </summary>
class  VerifyEmailAddressOptions
    : public ModelBase
{
public:
    VerifyEmailAddressOptions();
    virtual ~VerifyEmailAddressOptions();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// VerifyEmailAddressOptions members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getMailServerDomain() const;
    bool mailServerDomainIsSet() const;
    void unsetMailServerDomain();

    void setMailServerDomain(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getEmailAddress() const;
    bool emailAddressIsSet() const;
    void unsetEmailAddress();

    void setEmailAddress(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSenderEmailAddress() const;
    bool senderEmailAddressIsSet() const;
    void unsetSenderEmailAddress();

    void setSenderEmailAddress(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getPort() const;
    bool portIsSet() const;
    void unsetPort();

    void setPort(int32_t value);


protected:
    utility::string_t m_MailServerDomain;
    bool m_MailServerDomainIsSet;
    utility::string_t m_EmailAddress;
    bool m_EmailAddressIsSet;
    utility::string_t m_SenderEmailAddress;
    bool m_SenderEmailAddressIsSet;
    int32_t m_Port;
    bool m_PortIsSet;
};


}
}
}
}

#endif /* COM_MAILSLURP_CLIENT_MODEL_VerifyEmailAddressOptions_H_ */
